{"version":3,"file":"component---src-pages-tags-tsx-435495d0242ea7553a07.js","mappings":"kMAmGA,UAlEoD,YAYjD,IAXWA,EAWX,EAXDC,SAAYD,OAWX,IAVDE,KAUC,IATCC,KACEC,aAAgBC,EAQnB,EARmBA,MAAOC,EAQ1B,EAR0BA,YAAaC,EAQvC,EARuCA,QAEjBC,EAMtB,EANCC,kBAAqBD,MAMtB,IALCE,KACqBC,EAItB,EAJGC,gBAAmBD,gBACnBE,EAGH,EAHGA,UAIEC,EAA8BC,EAAAA,MAAkBf,GAChDgB,EAAsD,iBAApBF,EAAOG,UAA0BH,EAAOG,SAAmBH,EAAOG,SAAf,MAErFC,GAAeC,EAAAA,EAAAA,UACnB,kBACEX,EAAMY,QACJ,SACEC,EADF,GAeE,OARG,EAJDC,KACEC,YAAeC,WAIRC,SAAQ,SAACR,QACKS,IAAnBL,EAAKJ,GAAyBI,EAAKJ,GAAY,EAC9CI,EAAKJ,IAFZ,IAKAI,EAAI,MAEGA,CAhBX,GAkBE,CAAEM,IAAK,GApBe,GAsB1B,IAGF,EAAoCC,EAAAA,UAAe,GAA5CC,EAAP,KAAmBC,EAAnB,KAMA,OAJAF,EAAAA,WAAgB,WACdE,GAAc,EADhB,GAEG,IAEED,GAIDE,EAAAA,EAAAA,IAAAA,MAAAA,MACEA,EAAAA,EAAAA,IAACC,EAAAA,EAAD,CACE3B,MAAOA,EACPC,YAAaA,EACb2B,IAAK1B,EACL2B,MAAOrB,EACPsB,aAAcxB,IAEdoB,EAAAA,EAAAA,IAACK,EAAAA,EAAD,CAAcpB,iBAAkBA,EAAkBE,aAAcA,MAX/D,IAhDX,C","sources":["webpack://gatsby-starter-default/./src/pages/tags.tsx"],"sourcesContent":["import React, { FunctionComponent, useMemo } from 'react';\nimport CategoryList, { CategoryListProps } from 'components/Main/CategoryList';\n\nimport { graphql } from 'gatsby';\nimport { IGatsbyImageData } from 'gatsby-plugin-image';\nimport { PostListItemType } from 'types/PostItem.types';\nimport queryString, { ParsedQuery } from 'query-string';\nimport Template from 'components/Common/Template';\n\ntype TagsPageProps = {\n  location: {\n    search: string;\n  };\n  data: {\n    site: {\n      siteMetadata: {\n        title: string;\n        description: string;\n        siteUrl: string;\n      };\n    };\n    allMarkdownRemark: {\n      edges: PostListItemType[];\n    };\n    file: {\n      childImageSharp: {\n        gatsbyImageData: IGatsbyImageData;\n      };\n      publicURL: string;\n    };\n  };\n};\n\nconst IndexPage: FunctionComponent<TagsPageProps> = function ({\n  location: { search },\n  data: {\n    site: {\n      siteMetadata: { title, description, siteUrl },\n    },\n    allMarkdownRemark: { edges },\n    file: {\n      childImageSharp: { gatsbyImageData },\n      publicURL,\n    },\n  },\n}) {\n  const parsed: ParsedQuery<string> = queryString.parse(search);\n  const selectedCategory: string = typeof parsed.category !== 'string' || !parsed.category ? 'All' : parsed.category;\n\n  const categoryList = useMemo(\n    () =>\n      edges.reduce(\n        (\n          list: CategoryListProps['categoryList'],\n          {\n            node: {\n              frontmatter: { categories },\n            },\n          }: PostListItemType,\n        ) => {\n          categories.forEach((category) => {\n            if (list[category] === undefined) list[category] = 1;\n            else list[category]++;\n          });\n\n          list['All']++;\n\n          return list;\n        },\n        { All: 0 },\n      ),\n    [],\n  );\n\n  const [hasMounted, setHasMounted] = React.useState(false);\n\n  React.useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  if (!hasMounted) {\n    return null;\n  } else {\n    return (\n      <div>\n        <Template\n          title={title}\n          description={description}\n          url={siteUrl}\n          image={publicURL}\n          profileImage={gatsbyImageData}\n        >\n          <CategoryList selectedCategory={selectedCategory} categoryList={categoryList} />\n        </Template>\n      </div>\n    );\n  }\n};\n\nexport default IndexPage;\n\nexport const getPostList = graphql`\n  query getPostList {\n    site {\n      siteMetadata {\n        title\n        description\n        siteUrl\n      }\n    }\n    allMarkdownRemark(sort: { order: DESC, fields: [frontmatter___date, frontmatter___title] }) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            summary\n            date(formatString: \"YYYY.MM.DD.\")\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 400)\n              }\n            }\n          }\n        }\n      }\n    }\n    file(name: { eq: \"profile-image\" }) {\n      childImageSharp {\n        gatsbyImageData(width: 120, height: 120)\n      }\n      publicURL\n    }\n  }\n`;\n"],"names":["search","location","data","site","siteMetadata","title","description","siteUrl","edges","allMarkdownRemark","file","gatsbyImageData","childImageSharp","publicURL","parsed","queryString","selectedCategory","category","categoryList","useMemo","reduce","list","node","frontmatter","categories","forEach","undefined","All","React","hasMounted","setHasMounted","___EmotionJSX","Template","url","image","profileImage","CategoryList"],"sourceRoot":""}